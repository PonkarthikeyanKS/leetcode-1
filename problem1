class Solution:
    def largestRectangleArea(self, heights):
        n = len(heights)
        left = [0] * n
        right = [0] * n
        stack = []

        # Previous Smaller Element
        for i in range(n):
            while stack and heights[stack[-1]] >= heights[i]:
                stack.pop()
            left[i] = -1 if not stack else stack[-1]
            stack.append(i)

        # Clear stack for reuse
        stack = []

        # Next Smaller Element
        for i in range(n - 1, -1, -1):
            while stack and heights[stack[-1]] >= heights[i]:
                stack.pop()
            right[i] = n if not stack else stack[-1]
            stack.append(i)

        # Compute max area
        max_area = 0
        for i in range(n):
            width = right[i] - left[i] - 1
            area = heights[i] * width
            max_area = max(max_area, area)

        return max_area
